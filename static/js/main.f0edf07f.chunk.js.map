{"version":3,"sources":["screens/components/GameBoard/style.module.css","screens/components/Modal/style.module.css","screens/components/ResetButton/style.module.css","screens/components/Tracker/style.module.css","screens/components/Header/style.module.css","constants/cards.js","store.js","screens/components/ResetButton/index.js","screens/components/Modal/index.js","screens/components/Tracker/index.js","screens/components/Header/index.js","screens/components/GameBoard/index.js","screens/Home.js","App.js","index.js"],"names":["module","exports","CARDS","useStore","createHook","set","cards","sort","Math","random","displayModal","setDisplayModal","numberOfAttempts","setNumberOfAttempts","state","flippedCard","map","setFlippedCard","resetGame","card","ResetButton","content","background","boxShadow","className","style","resetButton","onClick","Modal","id","modalOpen","modalWrap","button","closeButton","Tracker","board","Header","container","Board","useState","comparisonArray","setComparisonArray","blockBoard","setBlockBoard","useEffect","length","compareCards","filterMatches","backToFalse","Object","keys","key","includes","setTimeout","filter","wrapper","i","prev","cardFlip","back","front","Home","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0edf07f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__2G2Cs\",\"wrapper\":\"style_wrapper__21E0I\",\"card\":\"style_card__2Ot9s\",\"cardFlip\":\"style_cardFlip__2jEi_\",\"back\":\"style_back__2e0Id\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOpen\":\"style_modalOpen__yQqea\",\"modalWrap\":\"style_modalWrap__1e8cq\",\"button\":\"style_button__13WME\",\"closeButton\":\"style_closeButton__Abmyw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resetButton\":\"style_resetButton__3XHQv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"style_board__DVKOT\",\"slideRight\":\"style_slideRight__10vvO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__2uN0W\"};","export const CARDS = [\r\n  \"🦊\",\r\n  \"🐰\",\r\n  \"🐸\",\r\n  \"🦁\",\r\n  \"🐯\",\r\n  \"🦄\",\r\n  \"🐲\",\r\n  \"🐷\",\r\n  \"🐺\",\r\n  \"🐼\",\r\n  \"🦊\",\r\n  \"🐰\",\r\n  \"🐸\",\r\n  \"🦁\",\r\n  \"🐯\",\r\n  \"🦄\",\r\n  \"🐲\",\r\n  \"🐷\",\r\n  \"🐺\",\r\n  \"🐼\",\r\n];\r\n","import createHook from \"zustand\";\r\n\r\nimport { CARDS } from \"./constants/cards.js\";\r\n\r\nconst useStore = createHook((set) => ({\r\n  cards: [...CARDS].sort(() => Math.random() - 0.5),\r\n\r\n  displayModal: false,\r\n  setDisplayModal: (displayModal) => set({ displayModal }),\r\n\r\n  numberOfAttempts: 0,\r\n  setNumberOfAttempts: () =>\r\n    set((state) => ({ numberOfAttempts: state.numberOfAttempts + 1 })),\r\n\r\n  flippedCard: CARDS.map(() => false),\r\n  setFlippedCard: (flippedCard) => set({ flippedCard }),\r\n\r\n  resetGame: () =>\r\n    set((state) => ({\r\n      cards: state.cards.sort(() => Math.random() - 0.5),\r\n      displayModal: false,\r\n      numberOfAttempts: 0,\r\n      flippedCard: CARDS.map((card) => false),\r\n    })),\r\n}));\r\n\r\nexport default useStore;\r\n","import useStore from \"../../../store\";\r\nimport style from \"./style.module.css\";\r\n\r\nexport function ResetButton({ content, background, boxShadow }) {\r\n  const resetGame = useStore((state) => state.resetGame);\r\n\r\n  return (\r\n    <button\r\n      className={style.resetButton}\r\n      style={{ background: background, boxShadow: boxShadow }}\r\n      onClick={resetGame}\r\n    >\r\n      {content}\r\n    </button>\r\n  );\r\n}\r\n","import useStore from \"../../../store\";\r\nimport { ResetButton } from \"../ResetButton\";\r\nimport style from \"./style.module.css\";\r\n\r\nexport function Modal() {\r\n  const numberOfAttempts = useStore((state) => state.numberOfAttempts);\r\n  const { setDisplayModal } = useStore();\r\n\r\n  return (\r\n    <div id=\"modal\" className={style.modalOpen}>\r\n      <div className={style.modalWrap}>\r\n        <h4>Well done!</h4>\r\n        <h6>Number of failed attempts: {numberOfAttempts}</h6>\r\n        <div className={style.button}>\r\n          <ResetButton\r\n            background=\"rgba(132, 219, 186, 0.788)\"\r\n            boxShadow=\"rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px\"\r\n            content=\"Play again\"\r\n          />\r\n          <button\r\n            className={style.closeButton}\r\n            onClick={() => setDisplayModal(false)}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import useStore from \"../../../store\";\r\nimport { ResetButton } from \"../ResetButton\";\r\n\r\nimport style from \"./style.module.css\";\r\n\r\nexport function Tracker() {\r\n  const numberOfAttempts = useStore((state) => state.numberOfAttempts);\r\n  return (\r\n    <div className={style.board}>\r\n      <p>Number of failed attempts: {numberOfAttempts}</p>\r\n      <ResetButton\r\n        content=\"Reset game\"\r\n        boxShadow=\"rgba(50, 50, 93, 0.3) 0px 5px 27px -5px\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import style from \"./style.module.css\";\r\n\r\nexport function Header() {\r\n  return (\r\n    <div className={style.container}>\r\n      <h1>Memory Match</h1>\r\n    </div>\r\n  );\r\n}\r\n","import useStore from '../../../store'\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport style from \"./style.module.css\";\r\n\r\nexport function Board() {\r\n  //UseStore\r\n  const setNumberOfAttempts = useStore(state => state.setNumberOfAttempts);\r\n  const { setDisplayModal } = useStore();\r\n  const cards = useStore((state) => state.cards)\r\n  const { setFlippedCard } = useStore();\r\n  const flippedCard = useStore(state => state.flippedCard)\r\n\r\n  //UseState\r\n  const [comparisonArray, setComparisonArray] = useState([]);\r\n  const [blockBoard, setBlockBoard] = useState(0);\r\n\r\n  useEffect(() => {\r\n    //Everytime a card is clicked, comparisonArray receives it as an element, and this effect is triggered.\r\n    if (comparisonArray.length === 2) {\r\n      //comparisonArray length is 2? Time to compare the cards\r\n      compareCards();\r\n    }\r\n  }, [flippedCard]);\r\n\r\n  const compareCards = () => {\r\n    if (comparisonArray[0] === comparisonArray[1]) { //if the cards flipped are match, \r\n      filterMatches(); //go to filterMatches to check if all the cards have been matched\r\n      setComparisonArray([]); // Cleaning comparisonArray for the next round of comparison\r\n      setBlockBoard(0); //The user can click again\r\n      return;\r\n    }\r\n    //if the cards flipped are not a match:\r\n    setNumberOfAttempts(); // +1 failed attempt\r\n    const backToFalse = Object.keys(flippedCard).map((key) => {\r\n      //this function iterates through the flippedCard obj\r\n      if (comparisonArray.includes(flippedCard[key])) {\r\n        //looking for the cards not matched (comparisonArray)\r\n        return false; //if the card is found, it returns \"false\" replacing the animal\r\n      }\r\n      return flippedCard[key];\r\n    });\r\n    setTimeout(() => {\r\n      //time for the user to check the cards before they are flipped back\r\n      setFlippedCard(backToFalse);\r\n      setBlockBoard(0); //The user can click again\r\n    }, 1500);\r\n    setComparisonArray([]); // Cleaning comparisonArray for the next round of comparison\r\n  };\r\n\r\n  const filterMatches = () => {\r\n    // this function iterates through the flippedCard obj and return an array, filtering all the animals (matches)\r\n    Object.keys(flippedCard).filter((key) => {\r\n      // therefore remaining only the falses (the cards not yet matched)\r\n      return !flippedCard[key]; //removing the cards already matched\r\n    }).length === 0 && setDisplayModal(true); // All the cards have been matched? Display modal!\r\n  };\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.wrapper}>\r\n        {cards.map((card, i) => {\r\n          return (\r\n            <div\r\n              onClick={() => {\r\n                if (!flippedCard[i] && blockBoard < 2) { \r\n                  // the states change only if the card was not flipped yet and the blockboard state is less than 2\r\n                  setFlippedCard({ ...flippedCard, [i]: card }); //setting flippedCard state of the specific card to the respective animal\r\n                  setComparisonArray([...comparisonArray, card]); // pushing the card to comparisonArray\r\n                  setBlockBoard((prev) => prev + 1); //The user is blocked from clicking when blockBoard === 2\r\n                }\r\n              }}\r\n              key={i}\r\n              className={flippedCard[i] ? style.cardFlip : style.card}\r\n              id={i}\r\n            >\r\n              {flippedCard[i] ? (\r\n                <div className={style.back}>{card}</div>\r\n              ) : (\r\n                <div className={style.front}>?</div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import useStore from '../store'\r\n\r\nimport { Header, Tracker, Board, Modal } from \"./components\";\r\n\r\nexport function Home() {\r\n  const displayModal = useStore(state => state.displayModal)\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {displayModal ? (\r\n        <Modal />\r\n      ) : (\r\n        <Tracker />\r\n      )}\r\n      <Board />\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport { Home } from \"./screens/Home.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}