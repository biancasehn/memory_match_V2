{"version":3,"sources":["screens/components/GameBoard/style.module.css","screens/components/Modal/style.module.css","screens/components/Tracker/style.module.css","screens/components/Header/style.module.css","screens/components/Modal/index.js","screens/components/Tracker/index.js","screens/components/Header/index.js","constants/cards.js","screens/components/GameBoard/index.js","screens/Home.js","App.js","index.js"],"names":["module","exports","Modal","numberOfAttempts","setDisplayModal","id","className","style","modalOpen","modalWrap","button","resetButton","onClick","closeButton","Tracker","board","Header","container","CARDS","sort","Math","random","Board","setNumberOfAttempts","useState","map","flippedCard","setFlippedCard","comparisonArray","setComparisonArray","blockBoard","setBlockBoard","useEffect","length","compareCards","filterMatches","backToFalse","Object","keys","key","includes","setTimeout","filter","wrapper","card","i","prev","cardFlip","back","front","Home","displayModal","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1df3794e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__2G2Cs\",\"wrapper\":\"style_wrapper__21E0I\",\"card\":\"style_card__2Ot9s\",\"cardFlip\":\"style_cardFlip__2jEi_\",\"back\":\"style_back__2e0Id\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOpen\":\"style_modalOpen__yQqea\",\"modalWrap\":\"style_modalWrap__1e8cq\",\"button\":\"style_button__13WME\",\"resetButton\":\"style_resetButton__3soua\",\"closeButton\":\"style_closeButton__Abmyw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"style_board__DVKOT\",\"slideRight\":\"style_slideRight__10vvO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__2uN0W\"};","import style from \"./style.module.css\";\r\n\r\nexport function Modal({ numberOfAttempts, setDisplayModal }) {\r\n  return (\r\n    <div id=\"modal\" className={style.modalOpen}>\r\n      <div className={style.modalWrap}>\r\n        <h4>Well done!</h4>\r\n        <h6>Number of failed attempts: {numberOfAttempts}</h6>\r\n        <div className={style.button}>\r\n          <button className={style.resetButton} onClick={() => setDisplayModal(false)}>Play again</button>\r\n          <button className={style.closeButton} onClick={() => setDisplayModal(false)}>Close</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import style from \"./style.module.css\";\r\n\r\nexport function Tracker({ numberOfAttempts }) {\r\n  return (\r\n    <div className={style.board}>\r\n      <p>Number of failed attempts: {numberOfAttempts}</p>\r\n    </div>\r\n  );\r\n}\r\n","import style from \"./style.module.css\";\r\n\r\nexport function Header() {\r\n  return (\r\n    <div className={style.container}>\r\n      <h1>Memory Match</h1>\r\n    </div>\r\n  );\r\n}\r\n","export const CARDS = [\r\n  \"🦊\",\r\n  \"🐰\",\r\n  \"🐸\",\r\n  \"🦁\",\r\n  \"🐯\",\r\n  \"🦄\",\r\n  \"🐲\",\r\n  \"🐷\",\r\n  \"🐺\",\r\n  \"🐼\",\r\n  \"🦊\",\r\n  \"🐰\",\r\n  \"🐸\",\r\n  \"🦁\",\r\n  \"🐯\",\r\n  \"🦄\",\r\n  \"🐲\",\r\n  \"🐷\",\r\n  \"🐺\",\r\n  \"🐼\",\r\n].sort(() => Math.random() - 0.5);\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { CARDS } from \"../../../constants/cards.js\";\r\nimport style from \"./style.module.css\";\r\n\r\nexport function Board({\r\n  setDisplayModal,\r\n  numberOfAttempts,\r\n  setNumberOfAttempts,\r\n}) {\r\n  const [flippedCard, setFlippedCard] = useState(() => CARDS.map(() => false));\r\n  const [comparisonArray, setComparisonArray] = useState([]);\r\n  const [blockBoard, setBlockBoard] = useState(0);\r\n\r\n  useEffect(() => {\r\n    //Everytime a card is clicked, comparisonArray receives it as an element, and this effect is triggered.\r\n    if (comparisonArray.length === 2) {\r\n      //comparisonArray length is 2? Time to compare the cards\r\n      compareCards();\r\n    }\r\n  }, [comparisonArray]);\r\n\r\n  const compareCards = () => {\r\n    if (comparisonArray[0] === comparisonArray[1]) {\r\n      //if the cards as not a match\r\n      filterMatches(); //if the cards flipped are match, go to filterMatches to check if all the cards have been matched\r\n      setComparisonArray([]); // Cleaning comparisonArray for the next round of comparison\r\n      setBlockBoard(0);\r\n      return;\r\n    }\r\n    setNumberOfAttempts(++numberOfAttempts); // +1 failed attempt\r\n    const backToFalse = Object.keys(flippedCard).map((key) => {\r\n      //this function iterates through the flippedCard obj\r\n      if (comparisonArray.includes(flippedCard[key])) {\r\n        //looking for the cards not matched (comparisonArray)\r\n        return false; //if the card is found, it returns \"false\" to replace the animal\r\n      }\r\n      return flippedCard[key];\r\n    });\r\n    setTimeout(() => {\r\n      //time for the user check the cards before flipping them back\r\n      setFlippedCard(backToFalse);\r\n      setBlockBoard(0);\r\n    }, 1500);\r\n    setComparisonArray([]); // Cleaning comparisonArray for the next round of comparison\r\n  };\r\n\r\n  const filterMatches = () => {\r\n    // this function iterates through the flippedCard obj and return an array, filtering all the animals (matches)\r\n    Object.keys(flippedCard).filter((key) => {\r\n      // therefore remaining only the falses (the cards not yet matched)\r\n      return !flippedCard[key]; //removing the cards already matched\r\n    }).length === 0 && setDisplayModal(true); // All the cards have been matched? Display modal!\r\n  };\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.wrapper}>\r\n        {CARDS.map((card, i) => {\r\n          return (\r\n            <div\r\n              onClick={() => {\r\n                if (!flippedCard[i] && blockBoard < 2) {\r\n                  // the states change only if the card was not flipped yet\r\n                  setFlippedCard({ ...flippedCard, [i]: card }); //setting flippedCard state of the specific card to the respective animal\r\n                  setComparisonArray([...comparisonArray, card]); // pushing the card to comparisonArray\r\n                  setBlockBoard((prev) => prev + 1);\r\n                }\r\n              }}\r\n              key={i}\r\n              className={flippedCard[i] ? style.cardFlip : style.card}\r\n              id={i}\r\n            >\r\n              {flippedCard[i] ? (\r\n                <div className={style.back}>{card}</div>\r\n              ) : (\r\n                <div className={style.front}>?</div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nimport { Header, Tracker, Board, Modal } from \"./components\";\r\n\r\nexport function Home() {\r\n  const [displayModal, setDisplayModal] = useState(false);\r\n  const [numberOfAttempts, setNumberOfAttempts] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {displayModal ? (\r\n        <Modal\r\n          displayModal={displayModal}\r\n          setDisplayModal={setDisplayModal}\r\n          numberOfAttempts={numberOfAttempts}\r\n        />\r\n      ) : (\r\n        <Tracker numberOfAttempts={numberOfAttempts} />\r\n      )}\r\n      <Board\r\n        setDisplayModal={setDisplayModal}\r\n        numberOfAttempts={numberOfAttempts}\r\n        setNumberOfAttempts={setNumberOfAttempts}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport { Home } from \"./screens/Home.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}